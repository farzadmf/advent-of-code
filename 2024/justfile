set shell := ['zsh', '-c']

bin_template := '
use rust::day_pday_::part_ppart_;
use std::fs;

fn main() {
    let file = fs::read_to_string(\"../input/day_pday_\").unwrap();
    part_ppart_(&file);
}
'

lib_template := '
pub fn part01(input: &str) -> i32 {
    println!(\"+++++++++++++++++++++++ PART 1 ++++++++++++++++++++++++++++\");

    input.len().try_into().unwrap()
}

pub fn part02(input: &str) -> i32 {
    println!(\"+++++++++++++++++++++++ PART 2 ++++++++++++++++++++++++++++\");

    input.len().try_into().unwrap()
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_part01() {
        let input = \"part01\";
        assert_eq!(6, part01(input));
    }

    #[test]
    fn test_part02() {
        let input = \"part02\";
        assert_eq!(6, part02(input));
    }
}
'

init day:
  @local padded_day=$(python -c "print('{{day}}'.zfill(2), end=None)") && \
  just _get_input {{day}} && \
  just _init_bin $padded_day 01 && \
  just _init_bin $padded_day 02 && \
  just _init_lib $padded_day

test day part='':
  @local padded_day=$(python -c "print('{{day}}'.zfill(2), end=None)") && \
  [[ -n "{{part}}" ]] && \
    local padded_part=$(python -c "print('{{part}}'.zfill(2), end=None)") || \
    local padded_part=$part && \
  cd rust && \
  cargo watch -x "nextest run day${padded_day}::tests::test_part${padded_part}" -c

run day part:
  @local padded_day=$(python -c "print('{{day}}'.zfill(2), end=None)") && \
  local padded_part=$(python -c "print('{{part}}'.zfill(2), end=None)") && \
  cd rust && \
  cargo watch -x "run --bin day${padded_day}_part${padded_part}" -c

_get_input day:
  @[[ $AOC_COOKIE ]] || { echo 'set $AOC_COOKIE'; return 1 }
  @local padded_day=$(python -c "print('{{day}}'.zfill(2), end=None)") && \
  curl -sL --cookie "session=$AOC_COOKIE" \
    https://adventofcode.com/$(date +%Y)/day/{{day}}/input > input/day${padded_day}

_init_bin day part:
  @echo "{{trim(bin_template)}}" | \
    sd '_pday_' {{day}} | \
    sd '_ppart_' {{part}} > rust/src/bin/day{{day}}_part{{part}}.rs

_init_lib day:
  @local lib_rs=rust/src/lib.rs && \
  touch $lib_rs && \
  local mod_str='pub mod day{{day}}' && \
  echo "{{trim(lib_template)}}" > rust/src/day{{day}}.rs && \
    rg -q $mod_str $lib_rs || echo "$mod_str;" >> $lib_rs
